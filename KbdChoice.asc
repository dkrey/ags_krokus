// new module script

bool isUpDown, isDownDown, isSpaceDown, isInteractDown;
int selection;
import bool in_speech;
bool prevent_doubleinteract;

bool ask_choice(String caption) {

  selection = true;
  in_speech = true;
  gChoice.Visible = true;
  prevent_doubleinteract = true;
  
  lblChoiceHead1.Text = caption;
  lblChoiceHead2.Text = lblChoiceHead1.Text;
  btnChoiceSelect.Y = lblChoiceYes.Y;
  lblChoiceYes2.TextColor = CDG.text_color_active;
  lblChoiceNo2.TextColor  = CDG.text_color;     
  
  int head_width = GetTextWidth(lblChoiceHead1.Text, eFontCaps);
  
  lblChoiceHead1.Width = head_width + 2;
  lblChoiceHead2.Width = head_width + 2;
  
  if (head_width > 55) btnChoiceMid.Width = head_width + 2;
  else btnChoiceMid.Width = 55;
  
  int guiwidth = btnChoiceLeft.Width + btnChoiceMid.Width + btnChoiceRight.Width;
  
  int guipos_x = Screen.Width/2 - guiwidth/2;
  

  btnChoiceLeft.X = guipos_x;
  btnChoiceMid.X  = btnChoiceLeft.X + btnChoiceLeft.Width;
  btnChoiceRight.X  = btnChoiceMid.X + btnChoiceMid.Width;
  lblChoiceYes.X  = btnChoiceLeft.X + btnChoiceLeft.Width + 19;
  lblChoiceYes2.X = btnChoiceLeft.X + btnChoiceLeft.Width + 19;
  lblChoiceNo.X   = btnChoiceLeft.X + btnChoiceLeft.Width + 19;
  lblChoiceNo2.X  = btnChoiceLeft.X + btnChoiceLeft.Width + 19;
  
  lblChoiceHead1.X = btnChoiceMid.X;
  lblChoiceHead2.X = btnChoiceMid.X;
  
  btnChoiceSelect.X =  lblChoiceYes.X - btnChoiceSelect.Width;
  btnChoiceSelect.Y = lblChoiceYes.Y;
  
  

  while (true) {
    if (prevent_doubleinteract) {
      if (!IsKeyPressed(eKeySpace) && !CTRL.isControlInteract()) {
        isSpaceDown = false;
        isInteractDown = false;
        prevent_doubleinteract = false;
      }
      else Wait(1);
    }
    else {
      
      if ((isInteractDown && !CTRL.isControlInteract()) || (isSpaceDown && !IsKeyPressed(eKeySpace))) {
        gChoice.Visible=false;
        return selection;        
      }
      
      if (isUpDown && !CTRL.isControlUp()) {
        if (selection) {
          selection = false;
          btnChoiceSelect.Y = lblChoiceNo.Y;
          lblChoiceYes2.TextColor = CDG.text_color;
          lblChoiceNo2.TextColor  = CDG.text_color_active;             
        }
        else {
          selection = true;
          btnChoiceSelect.Y = lblChoiceYes.Y;
          lblChoiceYes2.TextColor = CDG.text_color_active;
          lblChoiceNo2.TextColor  = CDG.text_color;
        }
      }
      
      else if (isDownDown && !CTRL.isControlDown()) {
        if (!selection) {
          selection = true;
          btnChoiceSelect.Y = lblChoiceYes.Y;
          lblChoiceYes2.TextColor = CDG.text_color_active;
          lblChoiceNo2.TextColor  = CDG.text_color;          
        }
        else {
          selection = false;
          btnChoiceSelect.Y = lblChoiceNo.Y;
          lblChoiceYes2.TextColor = CDG.text_color;
          lblChoiceNo2.TextColor  = CDG.text_color_active;
        }
      }
      
      isUpDown       = CTRL.isControlUp();
      isDownDown     = CTRL.isControlDown();
      isInteractDown = CTRL.isControlInteract();
      isSpaceDown = IsKeyPressed(eKeySpace);
      
      Wait(1);
    }
    
  }
  
}
