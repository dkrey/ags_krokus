// new module script

cwaypoint waypoint[MAX_WAYPOINTS];
short wp_index;

import int size_tile_x, size_tile_y;
import int tile_offset_x, tile_offset_y;
import DynamicSprite *Foreground;

short waypoint_screen_limit = 70;

short waypoint_sprite = 357;

static int WPOINT::get_free_waypoint()
{
  short return_idx = 0;
  short i;
  while (i < wp_index) {
    if (!waypoint[i].active) {
      return_idx = i;
      return return_idx;
    }
    i++;
  }
  if (wp_index > MAX_WAYPOINTS) return -1;
  return_idx = wp_index;
  wp_index++;
  
  return return_idx;    
}

static void WPOINT::create_waypoint(int tile_x, int tile_y, int tile_index, eTENGDir nextDir) 
{
  int wp_idx = WPOINT.get_free_waypoint();
  
  if (tile_index >0) {
    tile_x = TILES.getTileIndexXFromIndex(tile_index);
    tile_y = TILES.getTileIndexYFromIndex(tile_index);
  }
  waypoint[wp_idx].active = true;
  waypoint[wp_idx].x = tile_x * size_tile_x;
  waypoint[wp_idx].y = tile_y * size_tile_y;   
  waypoint[wp_idx].nextDir = nextDir;
}




static void WPOINT::clear_waypoint(int wp_idx)
{
  waypoint[wp_idx].active = false;
  waypoint[wp_idx].x = 0;
  waypoint[wp_idx].y = 0;
  waypoint[wp_idx].nextDir = eTengDirNull;
}

static void WPOINT::clear_all_waypoints()
{
  int i = 0;
	while ( i < MAX_WAYPOINTS )
	{  
    WPOINT.clear_waypoint(i);
		i++;
	}
  wp_index =0;
  
}

static int WPOINT::check_waypoint_at (int tile_index)
{
	int i = 0;
  int tile_x = TILES.getTileIndexXFromIndex(tile_index);
  int tile_y = TILES.getTileIndexYFromIndex(tile_index);
  
	while ( i < wp_index )
	{  
    if (waypoint[i].x / size_tile_x == tile_x && waypoint[i].y /size_tile_y== tile_y) return i;
		i++;
	}

	
	return -1;
}

static void WPOINT::show_waypoints_editor()
{
  String tempstring;
  int i = 0; 
	while ( i < wp_index )
	{
    if (waypoint[i].active) {
      if ( waypoint[i].x +tile_offset_x> (waypoint_screen_limit * (-1)) && waypoint[i].x +tile_offset_x < Screen.Width + waypoint_screen_limit ) 
      {
        if ( waypoint[i].y +tile_offset_y> (waypoint_screen_limit * (-1)) && waypoint[i].y +tile_offset_y< Screen.Height + waypoint_screen_limit )
        {
          DrawingSurface *foregroundSurface = Foreground.GetDrawingSurface();
          tempstring = String.Format ("%d",i);
          foregroundSurface.DrawingColor=15;
          foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x, waypoint[i].y +tile_offset_y, waypoint_sprite);
          foregroundSurface.DrawString(waypoint[i].x +tile_offset_x+1, waypoint[i].y +tile_offset_y +1, eFontTinyOut, tempstring);
          
          if (waypoint[i].nextDir == eTengDirUp) foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x+11, waypoint[i].y +tile_offset_y+11, 639);
          else if (waypoint[i].nextDir == eTengDirDown) foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x+11, waypoint[i].y +tile_offset_y+11, 641);
          else if (waypoint[i].nextDir == eTengDirLeft) foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x+11, waypoint[i].y +tile_offset_y+11, 638);
          else if (waypoint[i].nextDir == eTengDirRight) foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x+11, waypoint[i].y +tile_offset_y+11, 640);
          else foregroundSurface.DrawImage(waypoint[i].x +tile_offset_x+11, waypoint[i].y +tile_offset_y+11, 642);
          
          foregroundSurface.Release();
        }
      }
    }
    i++;
  }
}

export wp_index;
export waypoint;