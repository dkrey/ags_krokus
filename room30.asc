// Empty Room Template
// 
// room script file

bool use_savegamedir;
int  para_layer[5];

enum eHotspots {
  eHsp_ena_gate, 
  eHsp_dis_gate,
  eHsp_pause_para, 
  eHsp_ena_para,
  eHsp_dummy
};

enum eObjects {
  eObj_dummy
};

enum eChars {
  eChar_Harry, 
  eChar_dummy
};

//*******************************************************************************
//* room_FirstLoad
//* 
//*
//*******************************************************************************
function room_FirstLoad()
{
  // delete old savestates
  TENG.remove_saved_room(player.Room);
}


//*******************************************************************************
//* room_AfterFadeIn
//* 
//*
//*******************************************************************************
function room_AfterFadeIn()
{
  TILES.init_tile_sets(1);
  String levelname;
  if (TENG.check_for_saved_room(player.Room)) {
    levelname = String.Format("state_%d",player.Room);
    use_savegamedir = true;
  }
  else {
    levelname = "farmer_fields";
    leveledit = levelname;
    use_savegamedir = true; // should be false;
  }
  
  if (TENG.load_map(levelname, 159, 130, 0, use_savegamedir)) {
    PARALLAX.set_static(83);
    para_layer[0] = PARALLAX.add(644, 0.0, false, false, 0.0, false, false);// Moon
    para_layer[1] = PARALLAX.add(645, 0.2, true, false, 0.0, false, false); // Islands
    para_layer[2] = PARALLAX.add(646, -0.2, true, true, 0.0, false, false); // Clouds
    para_layer[3] = PARALLAX.add(647, 0.4, true, false, 0.8, false, false); // plants
    para_layer[4] = PARALLAX.add(648, 1.6, true, false, 0.6, false, false, true, 100); // Gate
    PARALLAX.set_static(83);
    PARALLAX.set_basetile_y(para_layer[3], ego_stats.starty+1);
    PARALLAX.set_basetile_y(para_layer[4], ego_stats.starty+1);
    
    int harry_idx = PEOPLE.get_people_idx_from_id(eChar_Harry);
    PEOPLE.add_people(harry_idx);
    PEOPLE.edit_people(harry_idx, VHARRYSHOT); 
    PEOPLE.lock_loop(harry_idx, 6);
    PEOPLE.animate_people(harry_idx);
    
    EGO.set_player_invisible(false);
    TENG.start(); 
    gLoading.Visible = false;    
    gPlayerStats.Visible = true;
    gDebugging.Visible = false;
    
    player.AddInventory(iArmFist);

    ego_stats.active_inv = iArmFist;
    ego_stats.active_weapon = eWCloseCombat;
    

  }
  else Display("Error, couldn't load level!");

}


//*******************************************************************************
//* interact_hotspot
//* 
//*
//*******************************************************************************
function interact_hotspot (int id) 
{
}

//*******************************************************************************
//* walk_on_hotspot
//* 
//*
//*******************************************************************************
function walk_on_hotspot (int id) 
{
  
  if (id == eHsp_ena_gate) {
    PARALLAX.fade_in(para_layer[4]);
  }
  else if (id == eHsp_dis_gate) {
    PARALLAX.fade_out(para_layer[4]);
  }
  
  else if (id == eHsp_pause_para) {
    PARALLAX.pause(true);
  }
  else if (id == eHsp_ena_para) {
    PARALLAX.pause(false);
  }
  
}

//*******************************************************************************
//* walk_on_object
//* 
//*
//*******************************************************************************
function walk_on_object (int id) 
{
}

//*******************************************************************************
//* interact_object
//* 
//*
//*******************************************************************************
function interact_object (int id) 
{
  
}

//*******************************************************************************
//* interact_char
//* 
//*
//*******************************************************************************
function interact_char (int id, int char_id) 
{
  int harry_id = PEOPLE.get_people_char_id (eChar_Harry);
  int harry_idx = PEOPLE.get_people_idx_from_id(eChar_Harry);
  
  if (char_id == harry_id){
    player.Speak("Hi Dave!");
    //dHelloCap.Start();
  }
}

//*******************************************************************************
//* on_call
//* This block needs to be in all your TENG enabled rooms
//*
//*******************************************************************************
function on_call(eTENGAction action) {
  if      (action == eTAct_InteractHotspot)interact_hotspot  (ego_stats.current_act_id );
  else if (action == eTAct_InteractObject) interact_object   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnHotspot)  walk_on_hotspot   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnObject)   walk_on_object    (ego_stats.current_act_id );
  else if (action == eTAct_InteractChar && ego_stats.current_act_id > -1) {
    int char_id = PEOPLE.get_people_char_id(ego_stats.current_act_id);
    interact_char(ego_stats.current_act_id, char_id);
  }
  
  else if (action >= eTAct_Other) {
    return true;
  }  
}
