// room script file

bool unlock_front_door;
bool hit_switch, door_unlocked;
bool use_savegamedir;

enum eHotspots {
  eHsp_Sign1, 
  eHsp_Sign2, 
  eHsp_Sign3, 
  eHsp_Sign4, 
  eHsp_Sign5, 
  eHsp_Sign6, 
  eHsp_Door 
};

enum eObjects {
  eObj_Door, 
  eObj_Door_house, 
  eObj_Switch
};

enum eChars {
  eChar_Becky
};

function room_Load()
{
  
}
function room_FirstLoad()
{
  // delete old savestates
  TENG.remove_saved_room(player.Room);
}


function room_AfterFadeIn()
{
  String levelname;
  TILES.init_tile_sets(1);
  
  if (TENG.check_for_saved_room(player.Room)) {
    levelname = String.Format("state_%d",player.Room);
    use_savegamedir = true;
  }
  else {
    levelname = "level1";
    use_savegamedir = true;
  }
  if (TENG.load_map(levelname, 159, 130, 0, use_savegamedir)) {
    leveledit = levelname;
    /*
    ITM.init_object(eObj_Switch, "switch", 8, false);
    ITM.init_object(eObj_Door, "door", 11, true);
    ITM.init_object(eObj_Door_house, "Front Door", 291, false);
    */

    HSP.init_hotspot(eHsp_Sign1, "Sign");
    HSP.init_hotspot(eHsp_Sign2, "Sign");
    HSP.init_hotspot(eHsp_Sign3, "Sign3");
    HSP.init_hotspot(eHsp_Sign4, "Sign");
    HSP.init_hotspot(eHsp_Sign5, "Sign");
    HSP.init_hotspot(eHsp_Sign6, "Sign");
    HSP.init_hotspot(eHsp_Door, "Door");
    
    
    //HSP.set_hotspot_name(eHsp_Sign3, "BINZ");
    PEOPLE.init_people(eChar_Becky, "Becky", 11, 12, 13);
    PEOPLE.set_people_interactable(eChar_Becky, true);
    PARALLAX.set_static(83);
    PARALLAX.add(54, 0.6, true, true, 0.5, false, false);
    PARALLAX.add(55, 1.2, true, false, 1.0, false, false);
    TENG.start(); 
    gLoading.Visible = false;    
    gPlayerStats.Visible= true;
    gDebugging.Visible=true;
    
    player.AddInventory(iArmGun);
    player.AddInventory(iArmFist);
    player.AddInventory(iKey);
    //player.AddInventory(iArmMouseGun);
    
    ego_stats.active_inv = iArmGun;
    ego_stats.active_weapon = eWPistol;

  }
  else Display("Error, couldn't load level!");

}


function interact_hotspot (int id) 
{
  if (id == eHsp_Sign1) {
    /*
    player.AddInventory(iKey);
    player.AddInventory(iKey);
    player.AddInventory(iKey);
    player.AddInventory(iKey);
    player.AddInventory(iKey);
    player.AddInventory(iKey);
    player.AddInventory(iKey);*/
    //dDialog1.Start();
    //player.Speak("Skip speech with ESC and hit F1 to customize your controls.");
    /*
    player.Say("The sign reads: ");
    player.Say("Welcome to PlaTENG.");
    player.Say("Skip speech with ESC and hit F1 to customize your controls.");
    player.Say("F2 is for the joystick setup.");*/
  }
  else if (id == eHsp_Sign2) {
    //player.Speak("The box above you contains a mushroom.");
    //player.Speak("It doesn't let you grow, but insted lets you destroy bricks with your head.");    
    //player.Speak("Pretty cool, huh?");  
    CAM.beam_to_place(player, eHsp_Sign6, 0,true);
  }
  else if (id == eHsp_Sign3) {
    player.Say("This is a background ramp.");
    player.Say("Better jump on it or you'll land in the spikes.");    

  }  
  else if (id == eHsp_Sign4) {
    player.Say("To get below this passage, you need to slide.");
    player.Say("Simply run a few steps and then press DOWN.");    
  }  
  else if (id == eHsp_Sign5) {
    player.Say("Swimming is prohibited and results into instant death...");
    player.Say("... because of ... uhm ... noxious algae? "); 
  }    
  else if (id == eHsp_Sign6) {
    player.Say("The door might be locked and can only be unlocked from the other side.");
    player.Say("But you can climb above it."); 
    //CAM.beam_to_place(player, eHsp_Sign1, 0, 0, true);
  }     
 
  else if (id == eHsp_Door) {
   
    if (door_unlocked) {
      player.Say("Cool, an unlocked door.");
      ITM.animate_object(eObj_Door, 6, 5, 5, 2, eForwards);
      ITM.set_object_solid(eObj_Door, false);
      HSP.set_hotspot_active(eHsp_Sign6, false);               
      HSP.set_hotspot_active(eHsp_Door, false);               
    }
    else player.Say("It's a door, but it seems to be jammed.");
    
  }
}

function walk_on_hotspot (int id) 
{
}

function interact_object (int id) 
{
  if (id == eObj_Switch) {
    /*
    String temp;
    
    temp = "It's a ";
    temp = temp.Append(ITM.get_object_name(eObj_Switch));
    player.Say(temp); 
    player.Say("Let's see, if I can move it.");
    Wait(20);
    ITM.animate_object(eObj_Switch, 6, 4, 5, 2, eForwards);  
    hit_switch = true;
    */
    //player.Speak("Go Babe");
    PEOPLE.walk_ppl_x(eChar_Becky, 120, eTengDirRight, 1.4);
  }
  else if (id == eObj_Door_house) {
    if (!unlock_front_door && player.HasInventory(iKey)) {
      player.Say("Great, the key fits as espected.");
      ITM.set_object_sprite(eObj_Door_house, 292);
      unlock_front_door = true;
    }
    else if (!unlock_front_door && !player.HasInventory(iKey)) {
      player.Say("Another locked door and I don't have the key.");
    }
    else if (unlock_front_door) {
      TENG.change_room(11);
    }
  }
}

function walk_on_object (int id) 
{
}

function interact_char (int id, int char_id) 
{
  if (id == eChar_Becky) {
    
    EGO.face_player_people(eChar_Becky);
    PEOPLE.face_people_player(eChar_Becky);
    Wait(1);
    if (!player.HasInventory(iArmMouseGun)) {

      player.Say("Hello.");
      character[char_id].Say("Oh, hi there!");
      character[char_id].Say("Would you mind doing me a favour?");
      player.Say("Sure go ahead.");
      character[char_id].Say("My sandwich turned into an armed pig.");
      character[char_id].Say("Could you please get rid of it?");
      player.Say("What?!");
      character[char_id].Say("It's a quite nasty pig.");
      player.Say("Well...");
      Wait(30);
      character[char_id].Say("I'll give you a badass gun, if you're willing to help me.");
      player.Say("Oh... alright.");
      Wait(30);
      character[char_id].Say("Great, here's the key to my house.");
      character[char_id].Say("Don't forget to check your inventory.");
      player.AddInventory(iArmMouseGun);
      player.AddInventory(iKey);
    }
    else {
      player.Say("Hi!");
      character[char_id].Say("Oh, you're back.");      
      player.Say("What happens after I've killed your sandwich?");
      character[char_id].Say("Nothing I guess."); 
      player.Say("Okay, I'll be around then.");
    }
    
  }
}

function room_RepExec()
{
  if (hit_switch && ITM.object_is_animating(eObj_Switch)) ego_stats.NoControl = true;
  
  else if (hit_switch && !ITM.object_is_animating(eObj_Switch)) {
    ego_stats.NoControl = false;
    ITM.set_object_usable(1, false);
    hit_switch = false;
    player.Say("Bingo");
    door_unlocked = true;
  }
  
}



//*******************************************************************************
//* on_call
//* This block needs to be in all your TENG enabled rooms
//*
//*******************************************************************************
function on_call(eTENGAction action) {

  if      (action == eTAct_InteractHotspot)interact_hotspot  (ego_stats.current_act_id );
  else if (action == eTAct_InteractObject) interact_object   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnHotspot)  walk_on_hotspot   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnObject)   walk_on_object    (ego_stats.current_act_id );
  else if (action == eTAct_InteractChar && ego_stats.current_act_id > -1) {
    int char_id = PEOPLE.get_people_char_id(ego_stats.current_act_id);
    interact_char(ego_stats.current_act_id, char_id);
  }
  
  else if (action >= eTAct_Other) {
    return true;
  }  
}

