// new module script

import ctile_set tile_set;
import DynamicSprite *Foreground; // Layer 2
import ct_hotspot t_hotspot[MAX_HOTSPOTS];
import short t_hotspot_id[MAX_HOTSPOTS];
import citems item[MAX_ITEMS];
import short t_object_id[MAX_ITEMS];
import cpeople people[MAX_PEOPLE];
import short people_id[MAX_PEOPLE];
import short people_index;
import short game_cycle;
bool marker_hidden;


static void MARKER::set_marker_hidden()
{
  marker_hidden = true;
}

static void MARKER::set_marker_visible()
{
  marker_hidden = false;
}

//*******************************************************************************
//* draw_marker
//* places a marker over the players head, to mark an interactable location
//*
//*******************************************************************************
static void MARKER::draw_marker() 
{
  int marker_player = 616;
  int marker_enemy = 617;
  
  int marker_slot, i;
  String subtitle;
  
  if (!marker_hidden) {
    DrawingSurface *foregroundSurface = Foreground.GetDrawingSurface();
    
    if (ego_stats.current_action == eTAct_InteractHotspot || ego_stats.current_action == eTAct_InteractObject || ego_stats.current_action == eTAct_InteractChar) {
      if (ego_stats.current_action == eTAct_InteractHotspot &&  !t_hotspot[t_hotspot_id[ego_stats.current_act_id]].hidden || 
      (ego_stats.current_action == eTAct_InteractObject) || (ego_stats.current_action == eTAct_InteractChar)) {
        
        if (ego_stats.current_action == eTAct_InteractObject && item[t_object_id[ego_stats.current_act_id]].name !="") {
          subtitle = item[t_object_id[ego_stats.current_act_id]].shown_name;
        }
        else if (ego_stats.current_action == eTAct_InteractHotspot && t_hotspot[t_hotspot_id[ego_stats.current_act_id]].name != "") {
          subtitle = t_hotspot[t_hotspot_id[ego_stats.current_act_id]].shown_name;
        }
        else if (ego_stats.current_action == eTAct_InteractChar && people[people_id[ego_stats.current_act_id]].name!= "") {
          subtitle = people[people_id[ego_stats.current_act_id]].name;
        }
        
        if (t_hotspot[t_hotspot_id[ego_stats.current_act_id]].img > 0) {
          marker_slot = t_hotspot[t_hotspot_id[ego_stats.current_act_id]].img;
        }
        else if (ego_stats.current_action == eTAct_InteractObject && item[t_object_id[ego_stats.current_act_id]].img > 0) {
          marker_slot = item[t_object_id[ego_stats.current_act_id]].img;
        }
        else {
          marker_slot = marker_player;
        }
        if (game_cycle >20) {
          foregroundSurface.DrawImage(player.x - Game.SpriteWidth[marker_slot]/2, player.y - INFO.get_char_height(player) - Game.SpriteHeight[marker_slot]-2, marker_slot);
          if (!String.IsNullOrEmpty(subtitle)) {
            foregroundSurface.DrawingColor = 15;
            int text_width = GetTextWidth(subtitle, eFontCapsOut);
            
            foregroundSurface.DrawString(Screen.Width / 2 - text_width / 2, 180, eFontCapsOut, subtitle);
          }
        }
        else {
          if (!String.IsNullOrEmpty(subtitle)) {
            foregroundSurface.DrawingColor = 15;
            int text_width = GetTextWidth(subtitle, eFontCapsOut);
            
            foregroundSurface.DrawString(Screen.Width / 2 - text_width / 2, 180, eFontCapsOut, subtitle);
          }
          foregroundSurface.DrawImage(player.x - Game.SpriteWidth[marker_slot]/2, 1+ player.y - INFO.get_char_height(player) - Game.SpriteHeight[marker_slot]-2, marker_slot);
        }

        foregroundSurface.Release();
      }
    }
  }

  
  while ( i < people_index )
  {
    if (people[i].active && people[i].health > 0) {
      if (people[i].alarm_timer > 0 ) { 
        DrawingSurface *foregroundSurface = Foreground.GetDrawingSurface();
        foregroundSurface.DrawImage(people[i].x - Game.SpriteWidth[tile_set.marker]/2, people[i].y - INFO.get_char_height(character[people[i].char_id]) - Game.SpriteHeight[marker_enemy]-2, marker_enemy);
        foregroundSurface.Release();  
      }
      //Draw healthbar if people have been hurt
      if (people[i].healthbar_timer > 0) {
        DrawingSurface *foregroundSurface = Foreground.GetDrawingSurface();

        int bar_maxwidth= INFO.get_char_width(character[people[i].char_id]) *2;
        int bar_width = FloatToInt((IntToFloat(people[i].health) / IntToFloat(people[i].max_health)) * IntToFloat(bar_maxwidth), eRoundNearest);
        
        int x1 = people[i].x - INFO.get_char_width(character[people[i].char_id]);
        int y1 = people[i].y - INFO.get_char_height(character[people[i].char_id])-2;

        //barHP.Width = (HP / maxHP) * barMaxHP.Width.
        //red
        foregroundSurface.DrawingColor = Game.GetColorFromRGB(172, 50, 50);
        foregroundSurface.DrawLine(x1, y1, x1 +bar_maxwidth, y1, 2);
        foregroundSurface.DrawingColor = Game.GetColorFromRGB(217, 87, 99);
        foregroundSurface.DrawLine(x1, y1-1, x1 +bar_maxwidth, y1-1, 1);
        //green
        foregroundSurface.DrawingColor = Game.GetColorFromRGB(55, 148, 110);
        foregroundSurface.DrawLine(x1, y1, x1 +bar_width, y1, 2);
        foregroundSurface.DrawingColor = Game.GetColorFromRGB(106, 190, 48);
        foregroundSurface.DrawLine(x1, y1-1, x1 +bar_width, y1-1, 1);
        foregroundSurface.Release();         
      }
    }
    i++;
  }
  
}