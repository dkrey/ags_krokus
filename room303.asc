// room script file

DynamicSprite *bg;
DynamicSprite *bg2;
DynamicSprite *bg3;


DynamicSprite *dsRoad[17];
float spriteZ[17];
float zRange;


int game_cycle;

struct car
{
  float x, z, speed;
};

bool go_effect;

car cars[8];

float horizony = 115.0;
float neary = 150.0;
float nearZ = 4.0; // bigger > slower
float roadwidth = 500.0;

float zoff = 0.0;
int carSprite = 709;
float carScale = 0.6; //0.3
float carWheelY = 18.0;//18.0;

float modFloat(float val, float min, float max)
{
  float range = max - min;
  float fret = (val - min)/range;
  fret -= IntToFloat(FloatToInt(fret, eRoundDown));
  return min + range*fret;
}

function RenderRoad()
{
  // render a road 
  DrawingSurface *ds = Room.GetDrawingSurfaceForBackground();
  if (game_cycle<5) ds.DrawImage(0, 0, bg.Graphic);
  else if (game_cycle>5 && game_cycle<10) ds.DrawImage(0, 0, bg2.Graphic);
  else ds.DrawImage(0, 0, bg3.Graphic);
  int i = FloatToInt(horizony) + 1;
  while (i < 200)
  {
    float fz = nearZ * (neary - horizony) / (IntToFloat(i) - horizony);
    float fw = roadwidth * (nearZ / fz);
    fz += zoff;
    fz = modFloat(fz, spriteZ[0], spriteZ[16]);
    // convert to sprite y
    int y = FloatToInt(neary-(horizony + nearZ * (neary - horizony) / fz));
    // clamp
    if (y >= 16) y = 15; else if (y < 0) y = 0;
    
    int w = FloatToInt(fw);
    int x = 160 - FloatToInt(fw / 2.0);
    ds.DrawImage(x, i, dsRoad[y].Graphic, 0, w, 1);
    i++;
  }
  
  ds.Release();
}

function RenderCars()
{
  int sorted[8];
  int i;
  int j;
  while (i < 8)
  {
    sorted[i] = i;
    i++;
  }
  // bubble sort
  i = 0;
  while (i < 7)
  {
    j = i + 1;
    while (j < 8)
    {
      if (cars[sorted[i]].z < cars[sorted[j]].z)
      {
        int k = sorted[j];
        sorted[j] = sorted[i];
        sorted[i] = k;
      }
      j++;
    }
    i++;
  }

  DrawingSurface *ds = Room.GetDrawingSurfaceForBackground();

  // draw the cars
  j = 0;
  while (j < 8)
  {
    i = sorted[j];
    cars[i].z -= 1.0;
    if (cars[i].z > 0.0)
    {
      float fx = cars[i].x * (nearZ / cars[i].z);
      float fy = horizony + (nearZ * (neary - horizony)) / cars[i].z;
      float fw = carScale * IntToFloat(Game.SpriteWidth[carSprite]) * (nearZ / cars[i].z);
      float fh = carScale * IntToFloat(Game.SpriteHeight[carSprite]) * (nearZ / cars[i].z);
      float fwy = carScale * carWheelY * (nearZ / cars[i].z);
      ds.DrawImage(FloatToInt(160.0 + fx - fw/2.0), FloatToInt(fy - fh + fwy), carSprite, 0, FloatToInt(fw), FloatToInt(fh));
      //ds.DrawString(0, 0, eFontCaps, "%f", fy);
    }
    else
    {
      cars[i].z = IntToFloat(100 + Random(100));
      if (Random(100) > 50)
      {
        cars[i].x = 40.0 + IntToFloat(Random(4)*10);
      }
      else
      {
        cars[i].x = -40.0 - IntToFloat(Random(4)*10);
      }
    }
    j++;
  }
  
  ds.Release();
}

function room_RepExec()
{

}
function room_Load()
{
  TENG.stop();
  EGO.set_player_invisible(true);
}

function room_AfterFadeIn()
{
  gLoading.Visible=false;
  
  bg = DynamicSprite.CreateFromExistingSprite(701);
  bg2= DynamicSprite.CreateFromExistingSprite(702);
  bg3= DynamicSprite.CreateFromExistingSprite(703);
  // pull out a chunk of the road to repeat (16 pixels from neary up)
  int i = 0;
  while (i < 17)
  {
    int y = FloatToInt(neary) - i;
    float fy = IntToFloat(y);
    // at the near point (y = 150), z is 4m
    // at the horizon, z is infinity, so
    float fz = nearZ * (neary - horizony) / (fy - horizony);
    // at the near point the road width is 320 pixels
    float fw = roadwidth * (nearZ / fz);
    int w = FloatToInt(fw);
    int x = 160 - FloatToInt(fw / 2.0);
    if (x<0) x=0;
    if (w>320) w=320;

    dsRoad[i] = DynamicSprite.CreateFromBackground(0, x, y, w, 1);

    dsRoad[i].Resize(320, 1);
    spriteZ[i] = fz;
    i++;
  }
  zRange = spriteZ[16] - spriteZ[0];
  
  i = 0;
  while (i < 6)
  {
    if (Random(100) > 50)
    {
      cars[i].x = -40.0- IntToFloat(Random(4)*10);
    }
    else
    {
      cars[i].x = 40.0 +  IntToFloat(Random(4)*10);
    }
    cars[i].z = IntToFloat(Random(200));
    cars[i].speed = IntToFloat(1 + Random(4));
    i++;
  }
  oEscPod.SetView(VSHIPINTRO);
  oEscPod.Animate(2, 5, eRepeat, eNoBlock, eForwards);

  go_effect = true;  
  cDummy.SpeechView = VHARRYT;
  cDummy.Name = "Harry";
  cDummy.SpeechColor = 15;
  Wait(80);
  player.Speak("Harry, I am worried. We are fast and I don't see any controls.");
  cDummy.Speak("Barf.",0, Normal);
  //ShakeScreen(10);
  ShakeScreenBackground(3, 10, 30);
  Wait(60);
  player.Speak("There goes the Fortitude.");
  oEscPod.Animate(3, 6, eOnce, eBlock, eForwards);
  oEscPod.Visible=false;
  TRANS.circle_fadeout(175, 131);

  player.ChangeRoom(30);


}
// room script file

function room_Leave()
{
  go_effect = false;
  bg.Delete();
  bg2.Delete();
  bg3.Delete();
}

function repeatedly_execute_always() 
{
  if (player.Room == 303 && go_effect == true) {
    zoff = modFloat(zoff + 0.5, 0.0, zRange);
    if (game_cycle<16)game_cycle++;
    else game_cycle = 0;
    
    if (game_cycle == 16) oClouds.X+=1;
    if (oClouds.X >320) oClouds.X = -230;
    if (game_cycle%2 ==0) {
      RenderRoad();
      RenderCars();
    }
  }
}

