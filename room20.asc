// room script file
bool use_savegamedir;
bool harry_shot, harry_healed, found_pod, final;
int  para_layer[3];

enum eHotspots {
  eHsp_Keg, 
  eHsp_DoorToBridge,
  eHsp_DoorBackfromBridge, 
  eHsp_BlockedExit, 
  eHsp_DoorEscape, 
  eHsp_DoorBackEscape, 
  eHsp_DoorBoat, 
  eHsp_Chipshelve, 
  eHsp_Poster, 
  eHsp_Obelisk, 
  eHsp_Aidkit, 
  eHsp_EscapePod, 
  eHsp_sideDoorOpen
};

enum eObjects {
  eObj_sideDoor_blocker,
  eObj_sideDoor_interact, 
  eObj_chair
};

enum eChars {
  eChar_Harry, 
  eChar_Skeridan
};


//*******************************************************************************
//* room_Load
//* 
//*
//*******************************************************************************
function room_Load()
{
  gLoading.Visible = true; 
  harry_shot=false;
  harry_healed=false;
  found_pod=false;
  final=false;
}


//*******************************************************************************
//* room_FirstLoad
//* 
//*
//*******************************************************************************
function room_FirstLoad()
{
  // delete old savestates
  TENG.remove_saved_room(player.Room);
  player.AddInventory(iArmFist);

}

//*******************************************************************************
//* room_AfterFadeIn
//* 
//*
//*******************************************************************************
function room_AfterFadeIn()
{

  TILES.init_tile_sets(1);
  String levelname;
  if (TENG.check_for_saved_room(player.Room)) {
    levelname = String.Format("state_%d",player.Room);
    use_savegamedir = true;
  }
  else {
    levelname = "ship";
    leveledit = levelname;
    use_savegamedir = true;
  }
  
  if (TENG.load_map(levelname, 159, 130, 0, use_savegamedir)) {
    
    para_layer[0] = PARALLAX.add(644, 0.2, false, false, 0.5, false, false);
    para_layer[1] = PARALLAX.add(645, 0.3, false, true, 1.0, false, false);
    para_layer[2] = PARALLAX.add(646, -0.2, true, true, 1.0, false, false);
    PARALLAX.set_static(701);
    TENG.start(); 
    TENG.updateStatusGui();
    EGO.set_player_invisible(true);
    //EGO.animate_player();
    PEOPLE.handle_people();
    gLoading.Visible = false;    
    gPlayerStats.Visible= true;
    gDebugging.Visible=false;
    
    StartCutscene(eSkipESCOnly);
    Wait(40);
    
    int harry_id = PEOPLE.get_people_char_id (eChar_Harry);
    int skeridan_id = PEOPLE.get_people_char_id (eChar_Skeridan); 
    
    character[harry_id].Speak("Alright, Captain. State your full name please.",0, Normal );
    character[skeridan_id].Speak("Captain Lydia Skeridan.",0, Normal );
    character[harry_id].Speak("Where are you heading to?",0, Normal );
    character[skeridan_id].Speak("Velvet Bay.",0, Normal);
    character[harry_id].Speak("Any freight or passengers?",0, Normal );
    character[skeridan_id].Speak("I'm restocking at the our destination.",0, Normal);
    character[harry_id].Speak("Anything else you would like to add?",0, Normal );
    Wait(40);
    character[harry_id].Speak("Haha, don't like to waste my time either | ",0, Normal );
    character[harry_id].Speak("Splendit. Let me just flash this information to the safety chip and you are ready to go.",0, Normal );
    Wait(40);
    character[harry_id].Speak("Hey, what happend to your chip?",0, Normal );
    character[skeridan_id].Speak("It seems like it broke down and quite frankly I don't give a damn.",0, Normal);
    character[harry_id].Speak("Easy sweetheart, that chip is mandatory for everyone leaving capital island.",0, Normal );
    character[harry_id].Speak("Otherwise you won't be safe.",0, Normal );
    character[harry_id].Speak("Don't worry, I'll send my aid to get you a new one.",0, Normal, 0, true );
    
    Wait(40);
    EndCutscene();
    
    CAM.beam_to_place(player, 0, 2490, true);
    PEOPLE.handle_people();
    EGO.set_player_invisible(false);
    EGO.animate_player();
    
    StartCutscene(eSkipESCOnly);
    cDummy.SpeechView = VHARRYT;
    cDummy.Name = "Harry";
    cDummy.SpeechColor = 15;
    cDummy.Speak("Attention aid! Your boss needs your service!",1);
    player.Speak("What a poser. As soon as he spots women, he goes nuts.", 0, Normal);
    cDummy.Speak("Bring me a new safety ship from the shelve and join us on the bridge.[Chop-chop!",1);
    Wait(40);
    cDummy.Speak("*sigh* You may use the intercom now!",1);
    player.Speak(String.Format("Aye sir and my name is %s, dammit.",ego_stats.name), 1, Normal);
    player.Speak("This is the worst job I ever had.", 0, Normal);
    EndCutscene();
    
  }
  else Display("Error, couldn't load level!");

}

//*******************************************************************************
//* interact_hotspot
//* 
//*
//*******************************************************************************
function interact_hotspot (int id) 
{
  if (id == eHsp_DoorBoat) {
    CAM.beam_to_place(player, eHsp_BlockedExit, 0,  true);
  }
  else if (id == eHsp_BlockedExit) {
    if (player.HasInventory(iChip))
      player.Speak("I should better bring the chip to the bridge.");
    else if (harry_shot) player.Speak("Our boat is gone. No need to get wet.");
    else CAM.beam_to_place(player, eHsp_DoorBoat, 0, true);
  }
  else if ( id == eHsp_DoorToBridge) {
    CAM.beam_to_place(player, eHsp_DoorBackfromBridge, 0, true);
  }
  else if ( id == eHsp_DoorBackfromBridge ) {
    CAM.beam_to_place(player, eHsp_DoorToBridge, 0, true);
  }
  else if ( id == eHsp_DoorEscape) {
    CAM.beam_to_place(player, eHsp_DoorBackEscape, 0, true);
  }
  else if ( id == eHsp_DoorBackEscape) {
    if (final) player.Say("no");
    else CAM.beam_to_place(player, eHsp_DoorEscape, 0, true);
  }
  else if ( id == eHsp_Keg) {
    if (player.InventoryQuantity[iApple.ID] > 4) player.Speak("The keg is empty.",0);
    else if (player.InventoryQuantity[iApple.ID] == 0) {
      player.Speak("There are some apples in here. I think I should borrow one.",0);
      player.Speak(String.Format("%s steals an apple",ego_stats.name),0, Normal, 0, false, true);
      player.AddInventory(iApple);
    }
    else {
      player.Speak(String.Format("%s optains another apple.",ego_stats.name),0, Normal, 0, false, true);
      player.AddInventory(iApple);
    }
    
  }
  else if (id == eHsp_Chipshelve) {
    player.Speak("That's the shelve where we keep the chips.",0);
    if (!player.HasInventory(iChip) && !harry_shot) {
      player.Speak(String.Format("%s optains a safety chip.",ego_stats.name),0, Normal, 0, false, true);
      player.AddInventory(iChip);
    }
  }
  else if (id == eHsp_Obelisk && !player.HasInventory(iChip) && !harry_shot) {
    player.Speak("Here is a socket for a 64 legged chip.",0, Normal);
  }
  else if (id == eHsp_Obelisk && player.HasInventory(iChip) && ask_choice("Insert the chip?")) {
    int harry_id = PEOPLE.get_people_char_id (eChar_Harry);
    int skeridan_id = PEOPLE.get_people_char_id (eChar_Skeridan);
    int skeridan_idx = PEOPLE.get_people_idx_from_id(eChar_Skeridan);
    
    PEOPLE.add_weapon(skeridan_idx, eWLydiaGun);

    player.Speak("That's the spot for the chip?",0, Normal, 0);
    character[skeridan_id].Speak("I cannot accept that you bug my ship.",0);
    
    character[harry_id].Speak("I am sorry, but this is not a matter of choice.",0, Normal );
    character[harry_id].Speak("Without the chip I cannot let you leave the security zone.",0, Normal );
    character[harry_id].Speak("Just comply with the formalities as we all do.",0, Normal, 0, true );
    player.Speak(String.Format("%s inserts the chip.",ego_stats.name),0, Normal, 0, false, true);
    character[skeridan_id].Speak("Yes... I see.",0, Normal, 0);
    Wait(40);
    character[skeridan_id].Speak("You leave me no choice.",0, VerySlow, 0, true, false);
    player.Speak("Cpt. Skeridan pushes a few buttons.",0, Normal, 0, false, true);
    PARALLAX.set_xspeed(para_layer[1], -0.8);
    PARALLAX.set_autoscroll(para_layer[1], true, false);
    PARALLAX.set_xspeed(para_layer[2],-1.6 );
    player.Speak("The UWS Fortitude starts moving.",0, Normal, 0, true, true);
    cDummy.SpeechView = VCEILIAT;
    cDummy.Name = "???";
    cDummy.SpeechColor = 15;
    cDummy.Speak("Lydia, the ship is moving! Is everything alright?",1, Normal);
    character[skeridan_id].Speak("A slight change of plans. I've got it under control.",1, Normal);
    Wait(40);
    character[harry_id].Speak("What is going on?",0, Normal);
    character[harry_id].Speak("Who is that? Didn't you say you were alone?",0, Normal, 0, true);
    BULLET.shoot_enemy_bullet(character[harry_id].x, character[harry_id].y, skeridan_idx);
    Wait (20);
    int harry_idx = PEOPLE.get_people_idx_from_id(eChar_Harry);
    PEOPLE.edit_people(harry_idx, VHARRYSHOT); 
    PEOPLE.animate_people(harry_idx);
    character[harry_id].Speak("Unnghh.",0, Normal );
    player.Speak("What the..? Are you insane???", 0, Normal, 0);
    character[skeridan_id].Speak("Listen closely: I didn't aim for vital organs, but he is losing blood fast.",0, Normal);
    character[skeridan_id].Speak("In the abaft cabin is an aid kit, so you can save his life or try to stop me.",0, Normal);
    player.Speak("What if I do both?", 0, Normal, 0);
    character[skeridan_id].Speak("No time, this vessel will strand in a few minutes.",0, Normal, 0, false);
    character[skeridan_id].Speak("We take your patrol boat in the meantime.",0, Normal, 0, true);
    //player.Speak("Skeridan leaves", 0, Normal, 0, false, true);
    PEOPLE.walk_ppl_x(skeridan_idx, 140, eTengDirLeft, 1.4);
    while(PEOPLE.is_moving(eChar_Skeridan)) Wait(1);
    PEOPLE.clear_people(skeridan_idx);
    player.Speak("Who is 'we'? ", 0, Normal, 0);
    player.Speak("Wait! Comeback here! ", 0, VeryFast, 0, true, false);
    character[harry_id].Speak("So...much..pain...",0, Normal );
    character[harry_id].Speak("yet so much temperament...",0, Fast, 0, true, false, false );
    player.Speak("I'd better find that aid kit. ", 0, VeryFast, 0);
    harry_shot = true;
    player.LoseInventory(iChip);
    int side_door = ITM.get_object_idx(eObj_sideDoor_blocker);
    int side_door2 = ITM.get_object_idx(eObj_sideDoor_interact);
    ITM.clear_item(side_door);
    ITM.clear_item(side_door2);
  }
  else if (id == eHsp_Obelisk && !player.HasInventory(iChip) && harry_shot) {
    player.Speak("This devices was not designed to let the chip go, once it was installed.",0, Normal);
  }
  else if (id == eHsp_Aidkit){
    if (!player.HasInventory(iAid) && !harry_healed) {
      player.Speak(String.Format("%s optains some bandages.",ego_stats.name),0, Normal, 0, false, true);
      player.AddInventory(iAid);
      HSP.set_hotspot_active(eHsp_Aidkit, false);
    }  
  }
  else if (id == eHsp_EscapePod) {
    found_pod = true;
    if (!harry_shot) 
      player.Speak("Like every ship of this class, they have a working escape pod.",0, Normal);
    else if (!final && harry_shot)
      player.Speak("Great, this will help us to get off this vessel. I just need to get Harry.");
    else if (final) {
      int harry_id = PEOPLE.get_people_char_id (eChar_Harry);
      player.Speak("Ready to go?",0, Normal, 0, false);
      character[harry_id].Speak("Yes.",0);
      TENG.change_room(303);
    }
  }
}

//*******************************************************************************
//* walk_on_hotspot
//* 
//*
//*******************************************************************************
function walk_on_hotspot (int id) 
{
  if (id == eHsp_sideDoorOpen) {
    player.SpeakBackground("Huh, wasn't this door closed before?",0, 40);
    HSP.set_hotspot_active(eHsp_sideDoorOpen, false);
  }
}

//*******************************************************************************
//* walk_on_object
//* 
//*
//*******************************************************************************
function walk_on_object (int id) 
{
}

//*******************************************************************************
//* interact_object
//* 
//*
//*******************************************************************************
function interact_object (int id) 
{
  if (id == eObj_sideDoor_interact) {
    player.Speak("Locked.",0, Normal);
  }
}


//*******************************************************************************
//* interact_char
//* 
//*
//*******************************************************************************
function interact_char (int id, int char_id) 
{
  int harry_id = PEOPLE.get_people_char_id (eChar_Harry);
  int harry_idx = PEOPLE.get_people_idx_from_id(eChar_Harry);

  int skeridan_id = PEOPLE.get_people_char_id (eChar_Skeridan);
  
  if (id == eChar_Skeridan) {
    EGO.face_player_people(eChar_Skeridan);
    PEOPLE.face_people_player(eChar_Skeridan);
    Wait(1);
    dHelloCap.Start();
  }
  else if (id == eChar_Harry) {
    if (player.HasInventory(iChip) && !harry_shot) {
      character[harry_id].Speak("Good, you've got the chip.",0);
      character[harry_id].Speak("Now please insert it in the obelisk next to you.",0, Normal, 0, true );
      character[skeridan_id].Speak("You will not butcher my ship with this digital collar!",0);
      character[harry_id].Speak("What's that?",0, Normal );
      character[harry_id].Speak("Without the chip you will completely untrackable.",0, Normal, 0, true );
      character[harry_id].Speak("What will happen, if you have a breakdown?",0, Normal, 0 );
      character[harry_id].Speak("What will happen, if pirates attack?",0, Normal, 0, true );
      character[harry_id].Speak("No, you want that chip.",0, true );
    }
    else if (!harry_shot && !player.HasInventory(iChip)) {
      character[harry_id].Speak("Didn't you forget something?",0);
      player.Speak("Like what?",0);
      character[harry_id].Speak("The chip would make a start.",0);
      player.Speak("Yeah, right. Aye sir.",0);
    }
    else if (harry_shot && !harry_healed && ! player.HasInventory(iAid)) {
      player.Speak("Hang in there, I'll get the bandages.",0, Normal, 0, false);
    }
    else if (harry_shot && player.HasInventory(iAid)) {
      player.Speak(String.Format("%s takes care of Harrys wounds.",ego_stats.name),0, Normal, 0, false, true);
      Wait(40);
      PEOPLE.lock_loop(harry_idx, 4);
      PEOPLE.animate_people(harry_idx);
      player.Speak("There, this should keep you alive until we find help.",0, Normal, 0, false);
      harry_healed = true;
      player.LoseInventory(iAid);
    }
    else if (harry_healed && !found_pod) {
      character[harry_id].Speak("We need to get out of here..ugh..",0);
      int temp_rnd = Random(2);
      if (temp_rnd ==0) character[harry_id].Speak("..injured because of a chip..?  ",0);
      else if  (temp_rnd == 1) character[harry_id].Speak("..what a woman..",0);
      else character[harry_id].Speak("..did you get her intercom number? ",0);
    }
    else if (harry_healed && found_pod && !final) {
      final = true;
      player.Speak("I have found a rescue pod and it still intact.",0, Normal, 0, false);
      TRANS.circle_fadeout(player.x, player.y - (INFO.get_char_height(player)/2));
      ITM.clear_item(eObj_chair);
      PEOPLE.set_people_XY_from_tile(eChar_Harry, 1716,true);
      PEOPLE.lock_loop(harry_idx, 5);
      PEOPLE.animate_people(harry_idx);      
      CAM.beam_to_place(player, 0, 1721, true);
      
      PEOPLE.handle_people();
      TRANS.circle_fadein(player.x, player.y - (INFO.get_char_height(player)/2));
      
    }
    else if (final) {
      player.Speak("Ready to go?",0, Normal, 0, false);
      character[harry_id].Speak("Yes.",0);
      TENG.change_room(303);
    }
  }
}

//*******************************************************************************
//* on_call
//* This block needs to be in all your TENG enabled rooms
//*
//*******************************************************************************
function on_call(eTENGAction action) {

  if      (action == eTAct_InteractHotspot)interact_hotspot  (ego_stats.current_act_id );
  else if (action == eTAct_InteractObject) interact_object   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnHotspot)  walk_on_hotspot   (ego_stats.current_act_id );
  else if (action == eTAct_WalkOnObject)   walk_on_object    (ego_stats.current_act_id );
  else if (action == eTAct_InteractChar && ego_stats.current_act_id > -1) {
    int char_id = PEOPLE.get_people_char_id(ego_stats.current_act_id);
    interact_char(ego_stats.current_act_id, char_id);
  }
  
  else if (action >= eTAct_Other) {
    return true;
  }  
}